{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "脚本：编译流程",
  "steps": [
    {
      "file": "shell.cc",
      "description": "#### 调用 v8::Script:Compile 编译命令\r\n",
      "line": 178
    },
    {
      "file": "src/api.cc",
      "description": "#### 编译入口开始，输入文件名\r\n\r\n",
      "line": 1007
    },
    {
      "file": "src/api.cc",
      "description": "#### pre_data 是 NULL。直接调用\n\n调用参数说明如下：\n\n- str: 代码字符串\n- name_obj：文件名\n- line_offset：js 行起始地址\n- column_offset：js 列起始地址\n- NULL：Extension* 参数\n- pre_data：ScriptData，执行脚本时为 NULL",
      "line": 1035
    },
    {
      "file": "src/compiler.cc",
      "description": "#### JS代码字符串编译入口",
      "line": 183
    },
    {
      "file": "src/compiler.cc",
      "description": "#### Factory::NewScirpt 转换字符串到 Script 对象（HeapObject）\n\nscript 是 HeapObject，有全局唯一的对应 Map",
      "line": 202
    },
    {
      "file": "src/compiler.cc",
      "description": "#### 开始编译JS代码为语法树",
      "line": 124
    },
    {
      "file": "src/parser.cc",
      "description": "#### 调用语法解析器入口，返回 FunctionLiteral*",
      "line": 3198
    },
    {
      "file": "src/scanner.cc",
      "description": "#### 初始化词法解析器\n",
      "line": 162
    },
    {
      "file": "src/compiler.cc",
      "description": "#### AST 编译为汇编代码。\n1. Scope 中创建变量，然后为 AST 中的 VariableProxy 绑定到 Scope 的变量，Scope 和语法树是同时建立的。\n\n",
      "line": 141
    },
    {
      "file": "src/compiler.cc",
      "description": "#### Scope 分配变量。为 VariablePrxoy 绑定变量",
      "line": 90
    },
    {
      "file": "src/compiler.cc",
      "description": "#### codegen-ia32 中生成汇编代码。对象为 Code",
      "line": 101
    },
    {
      "file": "src/compiler.cc",
      "description": "#### Code 对象转为 JSFunction 对象",
      "line": 176
    }
  ],
  "ref": "52bdd37c4bbf739b304fd72c11402d0566c709fa"
}